section#further-information
  .subnav
    ul.nav.nav-pills
      li
        a(href='#further-information-compatibility') Compatibility
      li
        a(href='#further-information-asynchronicity') Asynchronicity
      li
        a(href='#further-information-additional-links') Additional links

  section#further-information-compatibility.v1-4-1.v1-5-0
    h3 Compatibility
    p Sequelize is compatible to the following versions of Node.JS:
    ul
      li(style="text-decoration: line-through") 0.4.12
      li(style="text-decoration: line-through") 0.5.10
      li 0.6.x
      li 0.8.x
    p
      | <code>NOTICE:</code> Compatibility for versions < 0.6 was
      | dropped with Sequelize v1.4.1. It might still work with
      | Node.JS v0.4.x but as tests were moved to BusterJS, total
      | test coverage for < v0.6.x was not possible anymore.

  section#further-information-asynchronicity
    h3 Asynchronicity
    p.v1-4-1.v1-5-0 Since v1.3.0 there are multiple ways of adding listeners to asynchronous requests. First of all, each time you call a finder method or save an object, sequelize triggers asynchronous logic. To react to the success or the failure (or both) of the request, you can do the following:
    pre.prettyprint.linenums
      | // the old, pre-v1.3.0 way
      | Model.findAll().on('success', function(models) { /* foo */ })
      | Model.findAll().on('failure', function(err) { /* bar */ })
      | &nbsp;
      | // the new, >=v1.3.0 way
      | // each one is valid
      | Model.findAll().on('success', function(models) { /* foo */ })
      | Model.findAll().success(function(models) { /* foo */ })
      | Model.findAll().ok(function(models) { /* foo */ })
      | &nbsp;
      | // Model.findAll().on('failure', function(err) { /* bar */ }) ==> invalid since v1.5.0
      | Model.findAll().on('error', function(err) { /* bar */ }) //   ==> new since v1.5.0
      | Model.findAll().error(function(err) { /* bar */ })
      | Model.findAll().failure(function(err) { /* bar */ })
      | Model.findAll().fail(function(err) { /* bar */ })
      | &nbsp;
      | Model.findAll().complete(function(err, result) { /* bar */ })
      | Model.findAll().done(function(err, result) { /* bar */ })
      | &nbsp;
      | /*
      |   Please notice:
      |   Since v1.5.0 the 'error' event is used to notify about errors.
      |   If such events aren't caught however, Node.JS will throw an error.
      |   So you would probably like to catch them :D
      | */

  section#further-information-additional-links
    h3 Additional links
    p If you want to keep track about latest development of sequelize or to just discuss things with other sequelize users you might want to take a look at the following resources.
    ul
      li
        a(href='http://twitter.com/sdepold') Twitter
      li
        a(href='irc://irc.freenode.net/sequelizejs') IRC
      li
        a(href='https://www.xing.com/net/priec1b5cx/sequelize') XING


